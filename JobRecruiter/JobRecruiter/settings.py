"""
Django settings for JobRecruiter project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-(4j!%bz6jr8^)4!(ym01usmy9r+c^bsq#jeb8v*&qhyc6a=_t3"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "home",
    "accounts",
    "jobpostings",
    "messaging",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "accounts.middleware.ProfileCompletionMiddleware",
    'accounts.middleware.ProfileMiddleware',
]

ROOT_URLCONF = "JobRecruiter.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'JobRecruiter', 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "messaging.context_processors.unread_message_count",
            ],
        },
    },
]

WSGI_APPLICATION = "JobRecruiter.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
# This setting tells Django where to collect all static files.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files (user uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

STATICFILES_DIRS = [
    BASE_DIR / 'JobRecruiter/static/',
]

# Email Configuration
# All emails will be sent from a single generic email account
# The actual sender's information will be included in the email body

# For testing: emails will be printed to console
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# For production: uncomment the line below and configure SMTP settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Configure your generic email account (this will send ALL emails):

# Option 1: Gmail (requires App Password)
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'sharafkabir302@gmail.com'  # Replace with your generic Gmail address
EMAIL_HOST_PASSWORD = 'qzlmckicepunytri'
  # Replace with your Gmail App Password (not your regular password!)
DEFAULT_FROM_EMAIL = 'JobRecruiter <sharafkabir302@gmail.com>'  # Replace with your generic Gmail address

# Option 2: Outlook/Hotmail (uncomment these and comment out Gmail settings above)
# EMAIL_HOST = 'smtp-mail.outlook.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'your-generic-email@outlook.com'  # Replace with your generic Outlook address
# EMAIL_HOST_PASSWORD = 'your-password'  # Replace with your Outlook password
# DEFAULT_FROM_EMAIL = 'JobRecruiter <your-generic-email@outlook.com>'  # Replace with your generic Outlook address

# Option 3: Yahoo (uncomment these and comment out Gmail settings above)
# EMAIL_HOST = 'smtp.mail.yahoo.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'your-generic-email@yahoo.com'  # Replace with your generic Yahoo address
# EMAIL_HOST_PASSWORD = 'your-app-password'  # Replace with your Yahoo App Password
# DEFAULT_FROM_EMAIL = 'JobRecruiter <your-generic-email@yahoo.com>'  # Replace with your generic Yahoo address

# For development/testing only (emails print to console):
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Alternative SMTP providers:
# For Outlook/Hotmail:
# EMAIL_HOST = 'smtp-mail.outlook.com'
# EMAIL_PORT = 587

# For Yahoo:
# EMAIL_HOST = 'smtp.mail.yahoo.com'
# EMAIL_PORT = 587

# For custom SMTP server:
# EMAIL_HOST = 'your-smtp-server.com'
# EMAIL_PORT = 587